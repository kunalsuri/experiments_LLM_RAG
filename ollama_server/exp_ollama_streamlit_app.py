# About: Test the LLM and simple RAG generation using Ollama and Streamlit App

# Notice: This code inclused some parts generated by AI and some parts that are ispired from tutorial [1]
# [1] https://github.com/bllchmbrs/learnbybuilding.ai/blob/main/rag-from-scratch/rag-from-scratch.ipynb


import requests
import json
import streamlit as st


# Streamlit app layout
st.title("OLLAMA Text Interaction")

# Text input from the user
user_input = st.text_input("Enter your text:")


corpus_of_documents = [
    "Take a leisurely walk in the park and enjoy the fresh air.",
    "Visit a local museum and discover something new.",
    "Attend a live music concert and feel the rhythm.",
    "Go for a hike and admire the natural scenery.",
    "Have a picnic with friends and share some laughs.",
    "Explore a new cuisine by dining at an ethnic restaurant.",
    "Take a yoga class and stretch your body and mind.",
    "Join a local sports league and enjoy some friendly competition.",
    "Attend a workshop or lecture on a topic you're interested in.",
    "Visit an amusement park and ride the roller coasters."
]

def jaccard_similarity(query, document):
    query = query.lower().split(" ")
    document = document.lower().split(" ")
    intersection = set(query).intersection(set(document))
    union = set(query).union(set(document))
    return len(intersection)/len(union)

def return_response(query, corpus):
    similarities = []
    for doc in corpus:
        similarity = jaccard_similarity(query, doc)
        similarities.append(similarity)
    return corpus_of_documents[similarities.index(max(similarities))]

relevant_document = return_response(user_input, corpus_of_documents)
full_response = []


def get_ollama_response(user_input):
    prompt = """
    You are a bot that makes recommendations for activities. You answer in very short sentences and do not include extra information.

    This is the recommended activity: {relevant_document}

    The user input is: {user_input}

    Compile a recommendation to the user based on the recommended activity and the user input.
    """

    api_url = 'http://localhost:11434/api/generate'
    data = {
        "model": "llama2",
        "prompt": prompt.format(user_input=user_input, relevant_document=relevant_document)
    }

    headers = {'Content-Type': 'application/json'}

    response = requests.post(api_url, data=json.dumps(data), headers=headers, stream=True)

    if response.status_code == 200:
        try:
            count = 0
            for line in response.iter_lines():
                if line:
                    decoded_line = json.loads(line.decode('utf-8'))
                    
                    full_response.append(decoded_line['response'])
        finally:
            response.close()
        print(''.join(full_response))
        final_response = ''.join(full_response)
        return final_response
    else:
        return "Error: Unable to get response from OLLAMA"


# Button to submit the input
if st.button("Submit"):
    if user_input:
        # Get response from OLLAMA
        response = get_ollama_response(user_input)
        # Display the response
        st.write("Ollama's Response:")
        st.write(response)
    else:
        st.write("Please enter some text to submit.")